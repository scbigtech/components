@use '../../global/utils.scss';
:host {
  display: inline-block;
  --button-bg: var(--primary-bg);
  --button-color: white;
  --button-hover-bg: hsl(from var(--button-bg) h s calc(l / 1.5));

  --button-disabled-bg: var(--disabled-bg);
  --button-success-bg: var(--success-bg);

  --icon-size: 1em;
  --spacing: 1rem;
  --rounded: 4px;
  --active-scale: 0.9;
}

:host(.active) {
  --button-bg: var(--secondary-bg);
  transform: scale(var(--active-scale));
  pointer-events: none;
}

:host(.danger) {
  --button-bg: var(--danger-bg);
}

:host(.success) {
  --button-bg: var(--success-bg);
}

:host(.small) {
  --spacing: 0.25em;
}

button {
  padding: calc(var(--spacing) * 0.5) calc(var(--spacing) * 0.75);
  font-size: 1em;
  color: var(--button-color);
  background-color: var(--button-bg);
  border: none;
  border-radius: var(--rounded);
  cursor: pointer;
  transition: background-color 0.3s, opacity 0.3s;
  position: relative;
  transition: 0.4s;
}

.button__content {
  display: flex;
  align-items: center;
  justify-content: center;
  transition: 0.2s;
}

button:not(:disabled):hover .button__content {
  transform: scale(1.05);
}

button:not(:disabled):hover {
  background: var(--button-hover-bg);
  & slot[name^='icon']::slotted(*){
      animation: rotateandgrow .4s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

button:not(:disabled):active {
  filter: brightness(100%);
  transform: scale(var(--active-scale));
}


button:disabled {
  background-color: var(--button-disabled-bg);
  cursor: not-allowed;
}

button.loading {
  cursor: progress;
  filter: blur(.5px);
  pointer-events: none;
  animation: loading 1s infinite;
}

button.success {
  background-color: var(--button-success-bg);
}

.button__text {
  display: inline-block;
  padding-inline: 0.25em;
}


slot[name^='icon']::slotted(*) {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--icon-size);
  height: var(--icon-size);
  display: inline-block;
}

@keyframes loading {
  0% {
    opacity: 0.9;
  }

  100% {
    opacity: 0.5;
  }
}

@keyframes rotateandgrow {
  0% {
    transform: rotate(90deg) scale(0);
    transform-origin: center;
  }

  100% {
    transform: rotate(360deg) scale(1);
    transform-origin: center;
  }
}